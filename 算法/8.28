func isSubsequence(s string, t string) bool {
    /*双指针
    b,e:=len(s),len(t)//s的尾，t的尾
    l,r:=0,0//设置初始为0的位置
    for l<b&&r<e{//么有循环完两个字符串的话
        if s[l]==t[r]{//如果对上了，就右移左指针
            l++
        }
        r++//否则右移右指针
    }
    return l==b//看看l能不能移到尾部*/
    //动态规划
    n,m:=len(s),len(t)
    f:=make([][26]int,m+1)
    for i:=0;i<26;i++{
        f[m][i]=m
    }//初始化
    for i:=m-1;i>=0;i--{
        for j:=0;j<26;j++{
            if t[i]==byte(j+'a'){
                f[i][j]=i
            }else{
            f[i][j]=f[i+1][j]
        }
        }
    }//对数据的预处理，统计每个字母出现的地方
    p:=0
    for i:=0;i<n;i++{
        if f[p][int(s[i]-'a')]==m{
            return false//如果我们一开始设置的初始值，说明没找到对应的字符
        }
        p=f[p][int(s[i]-'a')]+1
    }
return true



}
